Resources:
  DiagnobotCompaniesTableC7E79FCC:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: created
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: created
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: diagnobot-companies-dev
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/DiagnobotCompaniesTable/Resource
  ChatgptLambdaRole17C50905:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/ChatgptLambdaRole/Resource
  ChatgptLambdaRoleDefaultPolicy29FA2D4B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":secretsmanager:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :secret:chatgpt-apikey-dev
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":secretsmanager:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :secret:discord-webhook
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":secretsmanager:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :secret:prospeo-apikey-dev
          - Action: dynamodb:ListStreams
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - DiagnobotCompaniesTableC7E79FCC
                - StreamArn
        Version: "2012-10-17"
      PolicyName: ChatgptLambdaRoleDefaultPolicy29FA2D4B
      Roles:
        - Ref: ChatgptLambdaRole17C50905
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/ChatgptLambdaRole/DefaultPolicy/Resource
  ChatgptLambdaFunctionB2846FA9:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - x86_64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e61e0760a9e8acc5a2991e1e3f4b00ab1e9a1b3e6a2e94d5f433761ae2c5b257.zip
      Environment:
        Variables:
          DISCORD_WEBHOOK:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:discord-webhook
          CHATGPT_APIKEY:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:chatgpt-apikey-dev
          PROSPEO_APIKEY:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:prospeo-apikey-dev
          ENVIRONMENT: dev
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      FunctionName: chatgpt-prompt-dev
      Handler: chatGPTPrompt.lambdaHandler
      MemorySize: 300
      Role:
        Fn::GetAtt:
          - ChatgptLambdaRole17C50905
          - Arn
      Runtime: nodejs18.x
      Timeout: 350
    DependsOn:
      - ChatgptLambdaRoleDefaultPolicy29FA2D4B
      - ChatgptLambdaRole17C50905
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/ChatgptLambdaFunction/Resource
      aws:asset:path: asset.e61e0760a9e8acc5a2991e1e3f4b00ab1e9a1b3e6a2e94d5f433761ae2c5b257
      aws:asset:is-bundled: true
      aws:asset:property: Code
  DynamoDBStreamEventRule7DAC044C:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.dynamodb
        detail-type:
          - AWS API Call via CloudTrail
        resources:
          - Fn::GetAtt:
              - DiagnobotCompaniesTableC7E79FCC
              - Arn
        detail:
          eventSource:
            - dynamodb.amazonaws.com
          eventName:
            - Insert
            - Modify
            - Remove
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ChatgptLambdaFunctionB2846FA9
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/DynamoDBStreamEventRule/Resource
  DynamoDBStreamEventRuleAllowEventRuleChatgptLambdaStackChatgptLambdaFunctionA0E5F27353CED57F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatgptLambdaFunctionB2846FA9
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - DynamoDBStreamEventRule7DAC044C
          - Arn
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/DynamoDBStreamEventRule/AllowEventRuleChatgptLambdaStackChatgptLambdaFunctionA0E5F273
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: ApplicationInsights-SAM-ChatgptLambdaStack
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/ApplicationResourceGroup
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      AutoConfigurationEnabled: true
      ResourceGroupName:
        Ref: ApplicationResourceGroup
    DependsOn:
      - ApplicationResourceGroup
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/ApplicationInsightsMonitoring
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/0VQQU7DMBB8S+/OkpQTx7YS3AoK3KONbcImsR1l7aIqyt+xnQCnmZ3VjGb3CFVVQnXAby6kGoqRWljePcpB1JpdmKUWcdcs6m7ROBW3H9iOWlw+bSarIDSw1G7TMr65keQ9jRtbxYimVdhYp3TPcM3wHKz05KzgxwaZtWc4JYgznIMctD8j690KS0z7c6RkPRtijtMq9E3b6F7qsJcIqde89+9mFyaGqL8kJnCaYilMQWSZui+fl6d/eRW5SHxDR7ZLia/BT8Hn7N+vRH5xVtFmSJdBzw+3YwlPUB56JirmYD0ZDfWGP3KCNDJsAQAA
    Metadata:
      aws:cdk:path: ChatgptLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ChatGPTPromptFunctionOutput:
    Description: ChatGPTPromptFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
        - ChatgptLambdaFunctionB2846FA9
        - Arn
  ChatGPTPromptFunctionIamRoleOutput:
    Description: Implicit IAM Role created for ChatGPTPromptFunction function
    Value:
      Fn::GetAtt:
        - ChatgptLambdaRole17C50905
        - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

